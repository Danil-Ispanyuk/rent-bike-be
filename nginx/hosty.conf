upstream api {
	server api:3000;
}

server {
    	server_name api.hosty.travel;

    	location / {
        	proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
       		proxy_set_header Connection 'upgrade';
        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       	 	proxy_set_header X-Forwarded-Proto $scheme;
        	proxy_cache_bypass $http_upgrade;
        	proxy_pass http://api;
   	 }	

    	# redirect server error pages to the static page /50x
    	error_page   500 502 503 504  /50x.html;
    	location = /50x.html {
        	root   /usr/share/nginx/html;
    	}	

    	listen 443 ssl; # managed by Certbot
    	ssl_certificate /etc/nginx/certs/api.hosty.travel/fullchain2.pem; # managed by Certbot
    	ssl_certificate_key /etc/nginx/certs/api.hosty.travel/privkey2.pem; # managed by Certbot

}

server {

        root /var/www/hosty_travel;

        index index.html;
        server_name hosty.travel; # managed by Certbot

        location / {
                try_files $uri $uri/ /index.html;
        }

        location /js {
                alias /var/www/hosty_travel/js;
        }


        location /css {
                alias /var/www/hosty_travel/css;
        }

        location /fonts {
                alias /var/www/hosty_travel/fonts;
        }

        location /images {
                alias /var/www/hosty_travel/images;
                expires 30d;
                add_header Cache-Control "public, max-age=2592000";
        }

        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/nginx/certs/hosty.travel/fullchain1.pem; # managed by Certbot
        ssl_certificate_key /etc/nginx/certs/hosty.travel/privkey1.pem; # managed by Certbot

}

server {
    listen 80;
    listen [::]:80;
    server_name api.hosty.travel hosty.travel;

    if ($host = hosty.travel) {
        return 301 https://$host$request_uri;
    }

    return 404; # managed by Certbot
}
