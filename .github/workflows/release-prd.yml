name: Release production - API

on:
  push:
    branches:
       - production
  workflow_dispatch:

env:
  AWS_REGION: eu-west-1
  PROJECT_ID: hosty
  ENV_ID: prd
  APP_ID: api

jobs:
  build-push-to-ecr:
    runs-on: [self-hosted, coax, ubuntu]
    permissions:
      contents: read
      actions: read
      id-token: write
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github/GitHubRole

    - name: Make entrypoints executable
      run: chmod +x docker-entrypoint.sh

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Initialize build date
      run: |
        echo "BUILD_DATE=`date +"%Y-%m-%d-%H%M"`" >> $GITHUB_ENV

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.PROJECT_ID }}-${{ env.ENV_ID}}-${{ env.APP_ID }}
        IMAGE_TAG: ${{ env.BUILD_DATE }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Notify Job Status Slack 
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,author,workflow,job,took # selectable (default: repo,message)
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
